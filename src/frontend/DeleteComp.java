/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frontend;

import backend.CPU;
import backend.Case;
import backend.DB_Manager;
import backend.GPU;
import backend.Item;
import backend.MOBO;
import backend.PSU;
import backend.RAM;
import java.util.ArrayList;

/**
 *
 * @author mbp5503
 */
public class DeleteComp extends javax.swing.JPanel {

    private Mockup myGUI;
    private DB_Manager db = new DB_Manager();
    private ArrayList<? extends Item> itemList;
    private ArrayList<CPU> cpuList;
    private ArrayList<MOBO> moboList;
    private ArrayList<RAM> ramList;
    private ArrayList<GPU> gpuList;
    private ArrayList<PSU> psuList;
    private ArrayList<Case> caseList;

    /**
     * Creates new form DeleteComp1
     */
    public DeleteComp() {
        initComponents();
    }

    public DeleteComp(Mockup m) {
        myGUI = m;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        ComponentCmb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ComponentList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        DeleteBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Component Type");

        ComponentCmb.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        ComponentCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CPU", "MOBO", "RAM", "GPU", "PSU", "Case" }));
        ComponentCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComponentCmbItemStateChanged(evt);
            }
        });
        ComponentCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComponentCmbActionPerformed(evt);
            }
        });
        ComponentCmb.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ComponentCmbPropertyChange(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Components: ");

        jScrollPane2.setViewportView(ComponentList);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Delete components");

        DeleteBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        DeleteBtn.setText("Delete Item");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        CancelBtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 198, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ComponentCmb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81)
                        .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ComponentCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ComponentCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComponentCmbItemStateChanged

    }//GEN-LAST:event_ComponentCmbItemStateChanged

    private void ComponentCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComponentCmbActionPerformed

        switch (ComponentCmb.getSelectedIndex()) {
            case 0: // displays CPU
                itemList = db.queryCPU();

                // add names from cpuList to cpuArray for the JList
                String[] cpuArray = new String[cpuList.size()];
                for (int i = 0; i < cpuArray.length; i++) {
                    cpuArray[i] = cpuList.get(i).getName();
                }

                itemList = cpuList;

                // wipe and populate JList
                ComponentList.clearSelection();
                ComponentList.setListData(cpuArray);

                break;

            case 1: // displays MOBO
                moboList = db.queryMOBO();

                // add names from moboList to moboArray for the JList
                String[] moboArray = new String[moboList.size()];
                for (int i = 0; i < moboArray.length; i++) {
                    moboArray[i] = moboList.get(i).getName();
                }

                // wipes and updates JList
                ComponentList.clearSelection();
                ComponentList.setListData(moboArray);
                itemList = moboList;

                break;

            case 2: // displays RAM
                ramList = db.queryRAM();

                // add names from ramList to ramArray for the JList
                String[] ramArray = new String[ramList.size()];
                for (int i = 0; i < ramArray.length; i++) {
                    ramArray[i] = ramList.get(i).getName();
                }

                // wipes and updates JList
                ComponentList.clearSelection();
                ComponentList.setListData(ramArray);
                itemList = ramList;
                // query database

                break;

            case 3: // displays GPU
                gpuList = db.queryGPU();

                // add names from gpuList to gpuArray for the JList
                String[] gpuArray = new String[gpuList.size()];
                for (int i = 0; i < gpuArray.length; i++) {
                    gpuArray[i] = gpuList.get(i).getName();
                }

                // wipes and updates JList
                ComponentList.clearSelection();
                ComponentList.setListData(gpuArray);
                itemList = gpuList;

                break;

            case 4: // displays PSU

                psuList = db.queryPSU();

                // add names from psuList to psuArray for the JList
                String[] psuArray = new String[psuList.size()];
                for (int i = 0; i < psuArray.length; i++) {
                    psuArray[i] = psuList.get(i).getName();
                }

                // wipes and updates JList
                ComponentList.clearSelection();
                ComponentList.setListData(psuArray);
                itemList = psuList;

                break;

            case 5: // displays Case
                caseList = db.queryCase();

                // add names from caseList to csaeArray for the JList
                String[] caseArray = new String[caseList.size()];
                for (int i = 0; i < caseArray.length; i++) {
                    caseArray[i] = caseList.get(i).getName();
                }

                // wipes and updates JList
                ComponentList.clearSelection();
                ComponentList.setListData(caseArray);
                itemList = caseList;

                break;
        } // end of switch
    }//GEN-LAST:event_ComponentCmbActionPerformed

    private void ComponentCmbPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ComponentCmbPropertyChange

    }//GEN-LAST:event_ComponentCmbPropertyChange

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed

        for (Item item : (ArrayList<Item>) itemList) {
            // iterates through array to return the item which was selected
            if (item.getName().equalsIgnoreCase(ComponentList.getSelectedValue())) {
                db.deleteItem(item);
            }
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        myGUI.changePanel("deleteitem", "manager");
    }//GEN-LAST:event_CancelBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JComboBox<String> ComponentCmb;
    private javax.swing.JList<String> ComponentList;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
